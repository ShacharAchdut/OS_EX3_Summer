Flat profile:

Each sample counts as 0.01 seconds.
 no time accumulated

  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ts/call  Ts/call  name    
  0.00      0.00     0.00     1650     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*>::operator*() const
  0.00      0.00     0.00     1481     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&)
  0.00      0.00     0.00      896     0.00     0.00  std::__deque_buf_size(unsigned long)
  0.00      0.00     0.00      888     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*>::_S_buffer_size()
  0.00      0.00     0.00      487     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*>::operator+=(long)
  0.00      0.00     0.00      481     0.00     0.00  std::operator+(std::_Deque_iterator<Point, Point&, Point*> const&, long)
  0.00      0.00     0.00      468     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*>::operator--()
  0.00      0.00     0.00      462     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*>::operator[](long) const
  0.00      0.00     0.00      462     0.00     0.00  std::deque<Point, std::allocator<Point> >::operator[](unsigned long)
  0.00      0.00     0.00      397     0.00     0.00  std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&)
  0.00      0.00     0.00      379     0.00     0.00  std::deque<Point, std::allocator<Point> >::size() const
  0.00      0.00     0.00      367     0.00     0.00  std::remove_reference<Point&>::type&& std::move<Point&>(Point&)
  0.00      0.00     0.00      362     0.00     0.00  ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}::operator()(Point, Point) const
  0.00      0.00     0.00      226     0.00     0.00  std::deque<Point, std::allocator<Point> >::end()
  0.00      0.00     0.00      223     0.00     0.00  std::deque<Point, std::allocator<Point> >::back()
  0.00      0.00     0.00      200     0.00     0.00  Point const& std::forward<Point const&>(std::remove_reference<Point const&>::type&)
  0.00      0.00     0.00      183     0.00     0.00  bool __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>::operator()<Point, std::_Deque_iterator<Point, Point&, Point*> >(Point&, std::_Deque_iterator<Point, Point&, Point*>)
  0.00      0.00     0.00      179     0.00     0.00  bool __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>::operator()<std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>)
  0.00      0.00     0.00      174     0.00     0.00  std::abs(float)
  0.00      0.00     0.00      173     0.00     0.00  ConvexHallDeque::orientation(Point, Point, Point)
  0.00      0.00     0.00      150     0.00     0.00  Point&& std::forward<Point>(std::remove_reference<Point>::type&)
  0.00      0.00     0.00      150     0.00     0.00  operator new(unsigned long, void*)
  0.00      0.00     0.00      134     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*>::operator++()
  0.00      0.00     0.00      100     0.00     0.00  void __gnu_cxx::new_allocator<Point>::construct<Point, Point const&>(Point*, Point const&)
  0.00      0.00     0.00      100     0.00     0.00  void std::allocator_traits<std::allocator<Point> >::construct<Point, Point const&>(std::allocator<Point>&, Point*, Point const&)
  0.00      0.00     0.00      100     0.00     0.00  std::deque<Point, std::allocator<Point> >::push_back(Point const&)
  0.00      0.00     0.00       98     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_M_get_Tp_allocator()
  0.00      0.00     0.00       96     0.00     0.00  void __gnu_cxx::new_allocator<Point>::destroy<Point>(Point*)
  0.00      0.00     0.00       96     0.00     0.00  void std::allocator_traits<std::allocator<Point> >::destroy<Point>(std::allocator<Point>&, Point*)
  0.00      0.00     0.00       96     0.00     0.00  std::deque<Point, std::allocator<Point> >::pop_back()
  0.00      0.00     0.00       53     0.00     0.00  std::operator==(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&)
  0.00      0.00     0.00       52     0.00     0.00  std::operator!=(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&)
  0.00      0.00     0.00       50     0.00     0.00  Point::Point(float, float)
  0.00      0.00     0.00       50     0.00     0.00  void __gnu_cxx::new_allocator<Point>::construct<Point, Point>(Point*, Point&&)
  0.00      0.00     0.00       50     0.00     0.00  void std::allocator_traits<std::allocator<Point> >::construct<Point, Point>(std::allocator<Point>&, Point*, Point&&)
  0.00      0.00     0.00       50     0.00     0.00  Point& std::deque<Point, std::allocator<Point> >::emplace_back<Point>(Point&&)
  0.00      0.00     0.00       50     0.00     0.00  std::deque<Point, std::allocator<Point> >::push_back(Point&&)
  0.00      0.00     0.00       50     0.00     0.00  std::remove_reference<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}&>::type&& std::move<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}&>(ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}&)
  0.00      0.00     0.00       48     0.00     0.00  __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>&&)
  0.00      0.00     0.00       48     0.00     0.00  __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>)
  0.00      0.00     0.00       48     0.00     0.00  void std::__unguarded_linear_insert<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>)
  0.00      0.00     0.00       48     0.00     0.00  std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>&>(__gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>&)
  0.00      0.00     0.00       28     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Point> >, std::is_move_constructible<Point>, std::is_move_assignable<Point> >::value, void>::type std::swap<Point>(Point&, Point&)
  0.00      0.00     0.00       28     0.00     0.00  void std::iter_swap<std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>)
  0.00      0.00     0.00       28     0.00     0.00  std::operator<(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&)
  0.00      0.00     0.00        6     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*>::operator-=(long)
  0.00      0.00     0.00        5     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*> std::__unguarded_partition<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>)
  0.00      0.00     0.00        5     0.00     0.00  void std::__move_median_to_first<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>)
  0.00      0.00     0.00        5     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*> std::__unguarded_partition_pivot<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>)
  0.00      0.00     0.00        5     0.00     0.00  std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, long)
  0.00      0.00     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<Point*>::new_allocator()
  0.00      0.00     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<Point*>::~new_allocator()
  0.00      0.00     0.00        4     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() const
  0.00      0.00     0.00        4     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_M_get_map_allocator() const
  0.00      0.00     0.00        4     0.00     0.00  std::allocator<Point*>::allocator<Point>(std::allocator<Point> const&)
  0.00      0.00     0.00        4     0.00     0.00  std::allocator<Point*>::~allocator()
  0.00      0.00     0.00        4     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*>::_M_set_node(Point**)
  0.00      0.00     0.00        4     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator()
  0.00      0.00     0.00        3     0.00     0.00  std::deque<Point, std::allocator<Point> >::begin()
  0.00      0.00     0.00        3     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*> std::__niter_base<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>)
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Point>::deallocate(Point*, unsigned long)
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Point>::allocate(unsigned long, void const*)
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Point>::new_allocator()
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Point>::~new_allocator()
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Point*>::deallocate(Point**, unsigned long)
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Point*>::allocate(unsigned long, void const*)
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Point>::_M_max_size() const
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<Point*>::_M_max_size() const
  0.00      0.00     0.00        2     0.00     0.00  std::allocator<Point>::allocator()
  0.00      0.00     0.00        2     0.00     0.00  std::allocator<Point>::~allocator()
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl::_Deque_impl()
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl::~_Deque_impl()
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_map(unsigned long)
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_M_create_nodes(Point**, Point**)
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl_data::_Deque_impl_data()
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_node()
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_M_destroy_nodes(Point**, Point**)
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_map(Point**, unsigned long)
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_M_initialize_map(unsigned long)
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_node(Point*)
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::_Deque_base()
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<Point, std::allocator<Point> >::~_Deque_base()
  0.00      0.00     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<Point> >::deallocate(std::allocator<Point>&, Point*, unsigned long)
  0.00      0.00     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<Point> >::allocate(std::allocator<Point>&, unsigned long)
  0.00      0.00     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<Point*> >::deallocate(std::allocator<Point*>&, Point**, unsigned long)
  0.00      0.00     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<Point*> >::allocate(std::allocator<Point*>&, unsigned long)
  0.00      0.00     0.00        2     0.00     0.00  std::deque<Point, std::allocator<Point> >::_M_destroy_data(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::allocator<Point> const&)
  0.00      0.00     0.00        2     0.00     0.00  std::deque<Point, std::allocator<Point> >::deque()
  0.00      0.00     0.00        2     0.00     0.00  std::deque<Point, std::allocator<Point> >::~deque()
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*> std::__miter_base<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>)
  0.00      0.00     0.00        2     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  ConvexHallDeque::readPoints()
  0.00      0.00     0.00        1     0.00     0.00  ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>::_Iter_comp_iter(ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1})
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>(ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1})
  0.00      0.00     0.00        1     0.00     0.00  Point* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<Point>(Point const*, Point const*, Point*)
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*> std::__niter_wrap<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*>)
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*> std::move_backward<std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>)
  0.00      0.00     0.00        1     0.00     0.00  void std::__insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>)
  0.00      0.00     0.00        1     0.00     0.00  void std::__introsort_loop<std::_Deque_iterator<Point, Point&, Point*>, long, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, long, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>)
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*> std::__copy_move_backward_a<true, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>)
  0.00      0.00     0.00        1     0.00     0.00  void std::__final_insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>)
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*> std::__copy_move_backward_a1<true, Point, Point&, Point*, Point>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>)
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::__enable_if<std::__is_random_access_iter<Point*, std::iterator_traits<Point*>::iterator_category>::__value, std::_Deque_iterator<Point, Point&, Point*> >::__type std::__copy_move_backward_a1<true, Point*, Point>(Point*, Point*, std::_Deque_iterator<Point, Point&, Point*>)
  0.00      0.00     0.00        1     0.00     0.00  Point* std::__copy_move_backward_a1<true, Point*, Point*>(Point*, Point*, Point*)
  0.00      0.00     0.00        1     0.00     0.00  Point* std::__copy_move_backward_a2<true, Point*, Point*>(Point*, Point*, Point*)
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_iterator<Point, Point&, Point*> std::__copy_move_backward_dit<true, Point, Point&, Point*, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>)
  0.00      0.00     0.00        1     0.00     0.00  void std::__unguarded_insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>)
  0.00      0.00     0.00        1     0.00     0.00  long const& std::min<long>(long const&, long const&)
  0.00      0.00     0.00        1     0.00     0.00  std::__lg(long)
  0.00      0.00     0.00        1     0.00     0.00  void std::sort<std::_Deque_iterator<Point, Point&, Point*>, ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1})
  0.00      0.00     0.00        1     0.00     0.00  void std::__sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) no time propagated

index % time    self  children    called     name
                0.00    0.00       2/1650        void std::__insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [109]
                0.00    0.00      56/1650        void std::iter_swap<std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [51]
                0.00    0.00     183/1650        bool __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>::operator()<Point, std::_Deque_iterator<Point, Point&, Point*> >(Point&, std::_Deque_iterator<Point, Point&, Point*>) [24]
                0.00    0.00     223/1650        std::deque<Point, std::allocator<Point> >::back() [22]
                0.00    0.00     358/1650        bool __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>::operator()<std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [25]
                0.00    0.00     366/1650        void std::__unguarded_linear_insert<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [48]
                0.00    0.00     462/1650        std::_Deque_iterator<Point, Point&, Point*>::operator[](long) const [15]
[8]      0.0    0.00    0.00    1650         std::_Deque_iterator<Point, Point&, Point*>::operator*() const [8]
-----------------------------------------------
                0.00    0.00       1/1481        std::_Deque_iterator<Point, Point&, Point*> std::__niter_wrap<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*>) [107]
                0.00    0.00       1/1481        std::_Deque_iterator<Point, Point&, Point*> std::__copy_move_backward_dit<true, Point, Point&, Point*, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [117]
                0.00    0.00       1/1481        __gnu_cxx::__enable_if<std::__is_random_access_iter<Point*, std::iterator_traits<Point*>::iterator_category>::__value, std::_Deque_iterator<Point, Point&, Point*> >::__type std::__copy_move_backward_a1<true, Point*, Point>(Point*, Point*, std::_Deque_iterator<Point, Point&, Point*>) [114]
                0.00    0.00       2/1481        void std::sort<std::_Deque_iterator<Point, Point&, Point*>, ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}) [121]
                0.00    0.00       2/1481        void std::__final_insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [112]
                0.00    0.00       2/1481        std::_Deque_iterator<Point, Point&, Point*> std::__miter_base<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>) [97]
                0.00    0.00       3/1481        std::deque<Point, std::allocator<Point> >::begin() [66]
                0.00    0.00       3/1481        std::_Deque_iterator<Point, Point&, Point*> std::move_backward<std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [108]
                0.00    0.00       3/1481        std::_Deque_iterator<Point, Point&, Point*> std::__copy_move_backward_a<true, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [111]
                0.00    0.00       3/1481        std::_Deque_iterator<Point, Point&, Point*> std::__niter_base<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>) [67]
                0.00    0.00       3/1481        std::_Deque_iterator<Point, Point&, Point*> std::__copy_move_backward_a1<true, Point, Point&, Point*, Point>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [113]
                0.00    0.00       4/1481        void std::__sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [122]
                0.00    0.00       5/1481        std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, long) [57]
                0.00    0.00      20/1481        void std::__introsort_loop<std::_Deque_iterator<Point, Point&, Point*>, long, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, long, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [110]
                0.00    0.00      20/1481        std::_Deque_iterator<Point, Point&, Point*> std::__unguarded_partition_pivot<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [56]
                0.00    0.00      34/1481        void std::__move_median_to_first<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [55]
                0.00    0.00      35/1481        void std::__unguarded_insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [118]
                0.00    0.00      46/1481        void std::__insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [109]
                0.00    0.00     226/1481        std::deque<Point, std::allocator<Point> >::end() [21]
                0.00    0.00     231/1481        void std::__unguarded_linear_insert<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [48]
                0.00    0.00     355/1481        std::_Deque_iterator<Point, Point&, Point*> std::__unguarded_partition<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [54]
                0.00    0.00     481/1481        std::operator+(std::_Deque_iterator<Point, Point&, Point*> const&, long) [13]
[9]      0.0    0.00    0.00    1481         std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [9]
-----------------------------------------------
                0.00    0.00       2/896         std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_node(Point*) [87]
                0.00    0.00       2/896         std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_node() [83]
                0.00    0.00       4/896         std::_Deque_base<Point, std::allocator<Point> >::_M_initialize_map(unsigned long) [86]
                0.00    0.00     888/896         std::_Deque_iterator<Point, Point&, Point*>::_S_buffer_size() [11]
[10]     0.0    0.00    0.00     896         std::__deque_buf_size(unsigned long) [10]
-----------------------------------------------
                0.00    0.00       4/888         std::_Deque_iterator<Point, Point&, Point*>::_M_set_node(Point**) [64]
                0.00    0.00     397/888         std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&) [17]
                0.00    0.00     487/888         std::_Deque_iterator<Point, Point&, Point*>::operator+=(long) [12]
[11]     0.0    0.00    0.00     888         std::_Deque_iterator<Point, Point&, Point*>::_S_buffer_size() [11]
                0.00    0.00     888/896         std::__deque_buf_size(unsigned long) [10]
-----------------------------------------------
                0.00    0.00       6/487         std::_Deque_iterator<Point, Point&, Point*>::operator-=(long) [53]
                0.00    0.00     481/487         std::operator+(std::_Deque_iterator<Point, Point&, Point*> const&, long) [13]
[12]     0.0    0.00    0.00     487         std::_Deque_iterator<Point, Point&, Point*>::operator+=(long) [12]
                0.00    0.00     487/888         std::_Deque_iterator<Point, Point&, Point*>::_S_buffer_size() [11]
-----------------------------------------------
                0.00    0.00       2/481         void std::__final_insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [112]
                0.00    0.00       2/481         void std::__insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [109]
                0.00    0.00      15/481         std::_Deque_iterator<Point, Point&, Point*> std::__unguarded_partition_pivot<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [56]
                0.00    0.00     462/481         std::_Deque_iterator<Point, Point&, Point*>::operator[](long) const [15]
[13]     0.0    0.00    0.00     481         std::operator+(std::_Deque_iterator<Point, Point&, Point*> const&, long) [13]
                0.00    0.00     481/1481        std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [9]
                0.00    0.00     481/487         std::_Deque_iterator<Point, Point&, Point*>::operator+=(long) [12]
-----------------------------------------------
                0.00    0.00      62/468         std::_Deque_iterator<Point, Point&, Point*> std::__unguarded_partition<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [54]
                0.00    0.00     183/468         void std::__unguarded_linear_insert<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [48]
                0.00    0.00     223/468         std::deque<Point, std::allocator<Point> >::back() [22]
[14]     0.0    0.00    0.00     468         std::_Deque_iterator<Point, Point&, Point*>::operator--() [14]
-----------------------------------------------
                0.00    0.00     462/462         std::deque<Point, std::allocator<Point> >::operator[](unsigned long) [16]
[15]     0.0    0.00    0.00     462         std::_Deque_iterator<Point, Point&, Point*>::operator[](long) const [15]
                0.00    0.00     462/481         std::operator+(std::_Deque_iterator<Point, Point&, Point*> const&, long) [13]
                0.00    0.00     462/1650        std::_Deque_iterator<Point, Point&, Point*>::operator*() const [8]
-----------------------------------------------
                0.00    0.00     462/462         ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&) [103]
[16]     0.0    0.00    0.00     462         std::deque<Point, std::allocator<Point> >::operator[](unsigned long) [16]
                0.00    0.00     462/462         std::_Deque_iterator<Point, Point&, Point*>::operator[](long) const [15]
-----------------------------------------------
                0.00    0.00       1/397         void std::__sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [122]
                0.00    0.00       1/397         void std::__final_insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [112]
                0.00    0.00       5/397         std::_Deque_iterator<Point, Point&, Point*> std::__unguarded_partition_pivot<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [56]
                0.00    0.00      11/397         void std::__introsort_loop<std::_Deque_iterator<Point, Point&, Point*>, long, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, long, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [110]
                0.00    0.00     379/397         std::deque<Point, std::allocator<Point> >::size() const [18]
[17]     0.0    0.00    0.00     397         std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&) [17]
                0.00    0.00     397/888         std::_Deque_iterator<Point, Point&, Point*>::_S_buffer_size() [11]
-----------------------------------------------
                0.00    0.00     379/379         ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&) [103]
[18]     0.0    0.00    0.00     379         std::deque<Point, std::allocator<Point> >::size() const [18]
                0.00    0.00     379/397         std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&) [17]
-----------------------------------------------
                0.00    0.00       2/367         void std::__insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [109]
                0.00    0.00      50/367         std::deque<Point, std::allocator<Point> >::push_back(Point&&) [44]
                0.00    0.00      84/367         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Point> >, std::is_move_constructible<Point>, std::is_move_assignable<Point> >::value, void>::type std::swap<Point>(Point&, Point&) [50]
                0.00    0.00     231/367         void std::__unguarded_linear_insert<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [48]
[19]     0.0    0.00    0.00     367         std::remove_reference<Point&>::type&& std::move<Point&>(Point&) [19]
-----------------------------------------------
                0.00    0.00     179/362         bool __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>::operator()<std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [25]
                0.00    0.00     183/362         bool __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>::operator()<Point, std::_Deque_iterator<Point, Point&, Point*> >(Point&, std::_Deque_iterator<Point, Point&, Point*>) [24]
[20]     0.0    0.00    0.00     362         ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}::operator()(Point, Point) const [20]
-----------------------------------------------
                0.00    0.00       1/226         ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&) [103]
                0.00    0.00       2/226         std::deque<Point, std::allocator<Point> >::~deque() [96]
                0.00    0.00     223/226         std::deque<Point, std::allocator<Point> >::back() [22]
[21]     0.0    0.00    0.00     226         std::deque<Point, std::allocator<Point> >::end() [21]
                0.00    0.00     226/1481        std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [9]
-----------------------------------------------
                0.00    0.00      50/223         Point& std::deque<Point, std::allocator<Point> >::emplace_back<Point>(Point&&) [43]
                0.00    0.00     173/223         ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&) [103]
[22]     0.0    0.00    0.00     223         std::deque<Point, std::allocator<Point> >::back() [22]
                0.00    0.00     223/226         std::deque<Point, std::allocator<Point> >::end() [21]
                0.00    0.00     223/468         std::_Deque_iterator<Point, Point&, Point*>::operator--() [14]
                0.00    0.00     223/1650        std::_Deque_iterator<Point, Point&, Point*>::operator*() const [8]
-----------------------------------------------
                0.00    0.00     100/200         void std::allocator_traits<std::allocator<Point> >::construct<Point, Point const&>(std::allocator<Point>&, Point*, Point const&) [32]
                0.00    0.00     100/200         void __gnu_cxx::new_allocator<Point>::construct<Point, Point const&>(Point*, Point const&) [31]
[23]     0.0    0.00    0.00     200         Point const& std::forward<Point const&>(std::remove_reference<Point const&>::type&) [23]
-----------------------------------------------
                0.00    0.00     183/183         void std::__unguarded_linear_insert<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [48]
[24]     0.0    0.00    0.00     183         bool __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>::operator()<Point, std::_Deque_iterator<Point, Point&, Point*> >(Point&, std::_Deque_iterator<Point, Point&, Point*>) [24]
                0.00    0.00     183/1650        std::_Deque_iterator<Point, Point&, Point*>::operator*() const [8]
                0.00    0.00     183/362         ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}::operator()(Point, Point) const [20]
-----------------------------------------------
                0.00    0.00      12/179         void std::__move_median_to_first<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [55]
                0.00    0.00      15/179         void std::__insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [109]
                0.00    0.00     152/179         std::_Deque_iterator<Point, Point&, Point*> std::__unguarded_partition<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [54]
[25]     0.0    0.00    0.00     179         bool __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>::operator()<std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [25]
                0.00    0.00     358/1650        std::_Deque_iterator<Point, Point&, Point*>::operator*() const [8]
                0.00    0.00     179/362         ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}::operator()(Point, Point) const [20]
-----------------------------------------------
                0.00    0.00       1/174         ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&) [103]
                0.00    0.00     173/174         ConvexHallDeque::orientation(Point, Point, Point) [27]
[26]     0.0    0.00    0.00     174         std::abs(float) [26]
-----------------------------------------------
                0.00    0.00     173/173         ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&) [103]
[27]     0.0    0.00    0.00     173         ConvexHallDeque::orientation(Point, Point, Point) [27]
                0.00    0.00     173/174         std::abs(float) [26]
-----------------------------------------------
                0.00    0.00      50/150         Point& std::deque<Point, std::allocator<Point> >::emplace_back<Point>(Point&&) [43]
                0.00    0.00      50/150         void std::allocator_traits<std::allocator<Point> >::construct<Point, Point>(std::allocator<Point>&, Point*, Point&&) [42]
                0.00    0.00      50/150         void __gnu_cxx::new_allocator<Point>::construct<Point, Point>(Point*, Point&&) [41]
[28]     0.0    0.00    0.00     150         Point&& std::forward<Point>(std::remove_reference<Point>::type&) [28]
-----------------------------------------------
                0.00    0.00      50/150         void __gnu_cxx::new_allocator<Point>::construct<Point, Point>(Point*, Point&&) [41]
                0.00    0.00     100/150         void __gnu_cxx::new_allocator<Point>::construct<Point, Point const&>(Point*, Point const&) [31]
[29]     0.0    0.00    0.00     150         operator new(unsigned long, void*) [29]
-----------------------------------------------
                0.00    0.00      15/134         void std::__insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [109]
                0.00    0.00      34/134         void std::__unguarded_insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [118]
                0.00    0.00      85/134         std::_Deque_iterator<Point, Point&, Point*> std::__unguarded_partition<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [54]
[30]     0.0    0.00    0.00     134         std::_Deque_iterator<Point, Point&, Point*>::operator++() [30]
-----------------------------------------------
                0.00    0.00     100/100         void std::allocator_traits<std::allocator<Point> >::construct<Point, Point const&>(std::allocator<Point>&, Point*, Point const&) [32]
[31]     0.0    0.00    0.00     100         void __gnu_cxx::new_allocator<Point>::construct<Point, Point const&>(Point*, Point const&) [31]
                0.00    0.00     100/200         Point const& std::forward<Point const&>(std::remove_reference<Point const&>::type&) [23]
                0.00    0.00     100/150         operator new(unsigned long, void*) [29]
-----------------------------------------------
                0.00    0.00     100/100         std::deque<Point, std::allocator<Point> >::push_back(Point const&) [33]
[32]     0.0    0.00    0.00     100         void std::allocator_traits<std::allocator<Point> >::construct<Point, Point const&>(std::allocator<Point>&, Point*, Point const&) [32]
                0.00    0.00     100/200         Point const& std::forward<Point const&>(std::remove_reference<Point const&>::type&) [23]
                0.00    0.00     100/100         void __gnu_cxx::new_allocator<Point>::construct<Point, Point const&>(Point*, Point const&) [31]
-----------------------------------------------
                0.00    0.00     100/100         ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&) [103]
[33]     0.0    0.00    0.00     100         std::deque<Point, std::allocator<Point> >::push_back(Point const&) [33]
                0.00    0.00     100/100         void std::allocator_traits<std::allocator<Point> >::construct<Point, Point const&>(std::allocator<Point>&, Point*, Point const&) [32]
-----------------------------------------------
                0.00    0.00       2/98          std::deque<Point, std::allocator<Point> >::~deque() [96]
                0.00    0.00      96/98          std::deque<Point, std::allocator<Point> >::pop_back() [37]
[34]     0.0    0.00    0.00      98         std::_Deque_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() [34]
-----------------------------------------------
                0.00    0.00      96/96          void std::allocator_traits<std::allocator<Point> >::destroy<Point>(std::allocator<Point>&, Point*) [36]
[35]     0.0    0.00    0.00      96         void __gnu_cxx::new_allocator<Point>::destroy<Point>(Point*) [35]
-----------------------------------------------
                0.00    0.00      96/96          std::deque<Point, std::allocator<Point> >::pop_back() [37]
[36]     0.0    0.00    0.00      96         void std::allocator_traits<std::allocator<Point> >::destroy<Point>(std::allocator<Point>&, Point*) [36]
                0.00    0.00      96/96          void __gnu_cxx::new_allocator<Point>::destroy<Point>(Point*) [35]
-----------------------------------------------
                0.00    0.00      96/96          ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&) [103]
[37]     0.0    0.00    0.00      96         std::deque<Point, std::allocator<Point> >::pop_back() [37]
                0.00    0.00      96/96          void std::allocator_traits<std::allocator<Point> >::destroy<Point>(std::allocator<Point>&, Point*) [36]
                0.00    0.00      96/98          std::_Deque_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() [34]
-----------------------------------------------
                0.00    0.00       1/53          void std::__insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [109]
                0.00    0.00      52/53          std::operator!=(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&) [39]
[38]     0.0    0.00    0.00      53         std::operator==(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&) [38]
-----------------------------------------------
                0.00    0.00       1/52          void std::__sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [122]
                0.00    0.00      16/52          void std::__insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [109]
                0.00    0.00      35/52          void std::__unguarded_insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [118]
[39]     0.0    0.00    0.00      52         std::operator!=(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&) [39]
                0.00    0.00      52/53          std::operator==(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&) [38]
-----------------------------------------------
                0.00    0.00      50/50          ConvexHallDeque::readPoints() [102]
[40]     0.0    0.00    0.00      50         Point::Point(float, float) [40]
-----------------------------------------------
                0.00    0.00      50/50          void std::allocator_traits<std::allocator<Point> >::construct<Point, Point>(std::allocator<Point>&, Point*, Point&&) [42]
[41]     0.0    0.00    0.00      50         void __gnu_cxx::new_allocator<Point>::construct<Point, Point>(Point*, Point&&) [41]
                0.00    0.00      50/150         Point&& std::forward<Point>(std::remove_reference<Point>::type&) [28]
                0.00    0.00      50/150         operator new(unsigned long, void*) [29]
-----------------------------------------------
                0.00    0.00      50/50          Point& std::deque<Point, std::allocator<Point> >::emplace_back<Point>(Point&&) [43]
[42]     0.0    0.00    0.00      50         void std::allocator_traits<std::allocator<Point> >::construct<Point, Point>(std::allocator<Point>&, Point*, Point&&) [42]
                0.00    0.00      50/150         Point&& std::forward<Point>(std::remove_reference<Point>::type&) [28]
                0.00    0.00      50/50          void __gnu_cxx::new_allocator<Point>::construct<Point, Point>(Point*, Point&&) [41]
-----------------------------------------------
                0.00    0.00      50/50          std::deque<Point, std::allocator<Point> >::push_back(Point&&) [44]
[43]     0.0    0.00    0.00      50         Point& std::deque<Point, std::allocator<Point> >::emplace_back<Point>(Point&&) [43]
                0.00    0.00      50/150         Point&& std::forward<Point>(std::remove_reference<Point>::type&) [28]
                0.00    0.00      50/50          void std::allocator_traits<std::allocator<Point> >::construct<Point, Point>(std::allocator<Point>&, Point*, Point&&) [42]
                0.00    0.00      50/223         std::deque<Point, std::allocator<Point> >::back() [22]
-----------------------------------------------
                0.00    0.00      50/50          ConvexHallDeque::readPoints() [102]
[44]     0.0    0.00    0.00      50         std::deque<Point, std::allocator<Point> >::push_back(Point&&) [44]
                0.00    0.00      50/367         std::remove_reference<Point&>::type&& std::move<Point&>(Point&) [19]
                0.00    0.00      50/50          Point& std::deque<Point, std::allocator<Point> >::emplace_back<Point>(Point&&) [43]
-----------------------------------------------
                0.00    0.00       1/50          __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>(ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}) [105]
                0.00    0.00       1/50          __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>::_Iter_comp_iter(ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}) [104]
                0.00    0.00      48/50          __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>&&) [46]
[45]     0.0    0.00    0.00      50         std::remove_reference<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}&>::type&& std::move<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}&>(ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}&) [45]
-----------------------------------------------
                0.00    0.00      48/48          __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [47]
[46]     0.0    0.00    0.00      48         __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>&&) [46]
                0.00    0.00      48/50          std::remove_reference<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}&>::type&& std::move<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}&>(ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}&) [45]
-----------------------------------------------
                0.00    0.00      14/48          void std::__insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [109]
                0.00    0.00      34/48          void std::__unguarded_insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [118]
[47]     0.0    0.00    0.00      48         __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [47]
                0.00    0.00      48/48          std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>&>(__gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>&) [49]
                0.00    0.00      48/48          __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>&&) [46]
-----------------------------------------------
                0.00    0.00      14/48          void std::__insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [109]
                0.00    0.00      34/48          void std::__unguarded_insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [118]
[48]     0.0    0.00    0.00      48         void std::__unguarded_linear_insert<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [48]
                0.00    0.00     366/1650        std::_Deque_iterator<Point, Point&, Point*>::operator*() const [8]
                0.00    0.00     231/367         std::remove_reference<Point&>::type&& std::move<Point&>(Point&) [19]
                0.00    0.00     231/1481        std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [9]
                0.00    0.00     183/468         std::_Deque_iterator<Point, Point&, Point*>::operator--() [14]
                0.00    0.00     183/183         bool __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>::operator()<Point, std::_Deque_iterator<Point, Point&, Point*> >(Point&, std::_Deque_iterator<Point, Point&, Point*>) [24]
-----------------------------------------------
                0.00    0.00      48/48          __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [47]
[49]     0.0    0.00    0.00      48         std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>&>(__gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>&) [49]
-----------------------------------------------
                0.00    0.00      28/28          void std::iter_swap<std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [51]
[50]     0.0    0.00    0.00      28         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Point> >, std::is_move_constructible<Point>, std::is_move_assignable<Point> >::value, void>::type std::swap<Point>(Point&, Point&) [50]
                0.00    0.00      84/367         std::remove_reference<Point&>::type&& std::move<Point&>(Point&) [19]
-----------------------------------------------
                0.00    0.00       5/28          void std::__move_median_to_first<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [55]
                0.00    0.00      23/28          std::_Deque_iterator<Point, Point&, Point*> std::__unguarded_partition<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [54]
[51]     0.0    0.00    0.00      28         void std::iter_swap<std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [51]
                0.00    0.00      56/1650        std::_Deque_iterator<Point, Point&, Point*>::operator*() const [8]
                0.00    0.00      28/28          std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Point> >, std::is_move_constructible<Point>, std::is_move_assignable<Point> >::value, void>::type std::swap<Point>(Point&, Point&) [50]
-----------------------------------------------
                0.00    0.00      28/28          std::_Deque_iterator<Point, Point&, Point*> std::__unguarded_partition<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [54]
[52]     0.0    0.00    0.00      28         std::operator<(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&) [52]
-----------------------------------------------
                0.00    0.00       1/6           __gnu_cxx::__enable_if<std::__is_random_access_iter<Point*, std::iterator_traits<Point*>::iterator_category>::__value, std::_Deque_iterator<Point, Point&, Point*> >::__type std::__copy_move_backward_a1<true, Point*, Point>(Point*, Point*, std::_Deque_iterator<Point, Point&, Point*>) [114]
                0.00    0.00       5/6           std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, long) [57]
[53]     0.0    0.00    0.00       6         std::_Deque_iterator<Point, Point&, Point*>::operator-=(long) [53]
                0.00    0.00       6/487         std::_Deque_iterator<Point, Point&, Point*>::operator+=(long) [12]
-----------------------------------------------
                0.00    0.00       5/5           std::_Deque_iterator<Point, Point&, Point*> std::__unguarded_partition_pivot<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [56]
[54]     0.0    0.00    0.00       5         std::_Deque_iterator<Point, Point&, Point*> std::__unguarded_partition<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [54]
                0.00    0.00     355/1481        std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [9]
                0.00    0.00     152/179         bool __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>::operator()<std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [25]
                0.00    0.00      85/134         std::_Deque_iterator<Point, Point&, Point*>::operator++() [30]
                0.00    0.00      62/468         std::_Deque_iterator<Point, Point&, Point*>::operator--() [14]
                0.00    0.00      28/28          std::operator<(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&) [52]
                0.00    0.00      23/28          void std::iter_swap<std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [51]
-----------------------------------------------
                0.00    0.00       5/5           std::_Deque_iterator<Point, Point&, Point*> std::__unguarded_partition_pivot<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [56]
[55]     0.0    0.00    0.00       5         void std::__move_median_to_first<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [55]
                0.00    0.00      34/1481        std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [9]
                0.00    0.00      12/179         bool __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>::operator()<std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [25]
                0.00    0.00       5/28          void std::iter_swap<std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [51]
-----------------------------------------------
                0.00    0.00       5/5           void std::__introsort_loop<std::_Deque_iterator<Point, Point&, Point*>, long, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, long, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [110]
[56]     0.0    0.00    0.00       5         std::_Deque_iterator<Point, Point&, Point*> std::__unguarded_partition_pivot<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [56]
                0.00    0.00      20/1481        std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [9]
                0.00    0.00      15/481         std::operator+(std::_Deque_iterator<Point, Point&, Point*> const&, long) [13]
                0.00    0.00       5/397         std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&) [17]
                0.00    0.00       5/5           std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, long) [57]
                0.00    0.00       5/5           void std::__move_median_to_first<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [55]
                0.00    0.00       5/5           std::_Deque_iterator<Point, Point&, Point*> std::__unguarded_partition<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [54]
-----------------------------------------------
                0.00    0.00       5/5           std::_Deque_iterator<Point, Point&, Point*> std::__unguarded_partition_pivot<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [56]
[57]     0.0    0.00    0.00       5         std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, long) [57]
                0.00    0.00       5/1481        std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [9]
                0.00    0.00       5/6           std::_Deque_iterator<Point, Point&, Point*>::operator-=(long) [53]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<Point*>::allocator<Point>(std::allocator<Point> const&) [62]
[58]     0.0    0.00    0.00       4         __gnu_cxx::new_allocator<Point*>::new_allocator() [58]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<Point*>::~allocator() [63]
[59]     0.0    0.00    0.00       4         __gnu_cxx::new_allocator<Point*>::~new_allocator() [59]
-----------------------------------------------
                0.00    0.00       4/4           std::_Deque_base<Point, std::allocator<Point> >::_M_get_map_allocator() const [61]
[60]     0.0    0.00    0.00       4         std::_Deque_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() const [60]
-----------------------------------------------
                0.00    0.00       2/4           std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_map(Point**, unsigned long) [85]
                0.00    0.00       2/4           std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_map(unsigned long) [80]
[61]     0.0    0.00    0.00       4         std::_Deque_base<Point, std::allocator<Point> >::_M_get_map_allocator() const [61]
                0.00    0.00       4/4           std::_Deque_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() const [60]
                0.00    0.00       4/4           std::allocator<Point*>::allocator<Point>(std::allocator<Point> const&) [62]
-----------------------------------------------
                0.00    0.00       4/4           std::_Deque_base<Point, std::allocator<Point> >::_M_get_map_allocator() const [61]
[62]     0.0    0.00    0.00       4         std::allocator<Point*>::allocator<Point>(std::allocator<Point> const&) [62]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<Point*>::new_allocator() [58]
-----------------------------------------------
                0.00    0.00       2/4           std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_map(Point**, unsigned long) [85]
                0.00    0.00       2/4           std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_map(unsigned long) [80]
[63]     0.0    0.00    0.00       4         std::allocator<Point*>::~allocator() [63]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<Point*>::~new_allocator() [59]
-----------------------------------------------
                0.00    0.00       4/4           std::_Deque_base<Point, std::allocator<Point> >::_M_initialize_map(unsigned long) [86]
[64]     0.0    0.00    0.00       4         std::_Deque_iterator<Point, Point&, Point*>::_M_set_node(Point**) [64]
                0.00    0.00       4/888         std::_Deque_iterator<Point, Point&, Point*>::_S_buffer_size() [11]
-----------------------------------------------
                0.00    0.00       4/4           std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl_data::_Deque_impl_data() [82]
[65]     0.0    0.00    0.00       4         std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator() [65]
-----------------------------------------------
                0.00    0.00       1/3           ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&) [103]
                0.00    0.00       2/3           std::deque<Point, std::allocator<Point> >::~deque() [96]
[66]     0.0    0.00    0.00       3         std::deque<Point, std::allocator<Point> >::begin() [66]
                0.00    0.00       3/1481        std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [9]
-----------------------------------------------
                0.00    0.00       3/3           std::_Deque_iterator<Point, Point&, Point*> std::__copy_move_backward_a<true, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [111]
[67]     0.0    0.00    0.00       3         std::_Deque_iterator<Point, Point&, Point*> std::__niter_base<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>) [67]
                0.00    0.00       3/1481        std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [9]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator_traits<std::allocator<Point> >::deallocate(std::allocator<Point>&, Point*, unsigned long) [90]
[68]     0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Point>::deallocate(Point*, unsigned long) [68]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator_traits<std::allocator<Point> >::allocate(std::allocator<Point>&, unsigned long) [91]
[69]     0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Point>::allocate(unsigned long, void const*) [69]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Point>::_M_max_size() const [74]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<Point>::allocator() [76]
[70]     0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Point>::new_allocator() [70]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<Point>::~allocator() [77]
[71]     0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Point>::~new_allocator() [71]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator_traits<std::allocator<Point*> >::deallocate(std::allocator<Point*>&, Point**, unsigned long) [92]
[72]     0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Point*>::deallocate(Point**, unsigned long) [72]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator_traits<std::allocator<Point*> >::allocate(std::allocator<Point*>&, unsigned long) [93]
[73]     0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Point*>::allocate(unsigned long, void const*) [73]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Point*>::_M_max_size() const [75]
-----------------------------------------------
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Point>::allocate(unsigned long, void const*) [69]
[74]     0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Point>::_M_max_size() const [74]
-----------------------------------------------
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Point*>::allocate(unsigned long, void const*) [73]
[75]     0.0    0.00    0.00       2         __gnu_cxx::new_allocator<Point*>::_M_max_size() const [75]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl::_Deque_impl() [78]
[76]     0.0    0.00    0.00       2         std::allocator<Point>::allocator() [76]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Point>::new_allocator() [70]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl::~_Deque_impl() [79]
[77]     0.0    0.00    0.00       2         std::allocator<Point>::~allocator() [77]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Point>::~new_allocator() [71]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_Deque_base() [88]
[78]     0.0    0.00    0.00       2         std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl::_Deque_impl() [78]
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl_data::_Deque_impl_data() [82]
                0.00    0.00       2/2           std::allocator<Point>::allocator() [76]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::~_Deque_base() [89]
[79]     0.0    0.00    0.00       2         std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl::~_Deque_impl() [79]
                0.00    0.00       2/2           std::allocator<Point>::~allocator() [77]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_M_initialize_map(unsigned long) [86]
[80]     0.0    0.00    0.00       2         std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_map(unsigned long) [80]
                0.00    0.00       2/4           std::_Deque_base<Point, std::allocator<Point> >::_M_get_map_allocator() const [61]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<Point*> >::allocate(std::allocator<Point*>&, unsigned long) [93]
                0.00    0.00       2/4           std::allocator<Point*>::~allocator() [63]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_M_initialize_map(unsigned long) [86]
[81]     0.0    0.00    0.00       2         std::_Deque_base<Point, std::allocator<Point> >::_M_create_nodes(Point**, Point**) [81]
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_node() [83]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl::_Deque_impl() [78]
[82]     0.0    0.00    0.00       2         std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl_data::_Deque_impl_data() [82]
                0.00    0.00       4/4           std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator() [65]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_M_create_nodes(Point**, Point**) [81]
[83]     0.0    0.00    0.00       2         std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_node() [83]
                0.00    0.00       2/896         std::__deque_buf_size(unsigned long) [10]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<Point> >::allocate(std::allocator<Point>&, unsigned long) [91]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::~_Deque_base() [89]
[84]     0.0    0.00    0.00       2         std::_Deque_base<Point, std::allocator<Point> >::_M_destroy_nodes(Point**, Point**) [84]
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_node(Point*) [87]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::~_Deque_base() [89]
[85]     0.0    0.00    0.00       2         std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_map(Point**, unsigned long) [85]
                0.00    0.00       2/4           std::_Deque_base<Point, std::allocator<Point> >::_M_get_map_allocator() const [61]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<Point*> >::deallocate(std::allocator<Point*>&, Point**, unsigned long) [92]
                0.00    0.00       2/4           std::allocator<Point*>::~allocator() [63]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_Deque_base() [88]
[86]     0.0    0.00    0.00       2         std::_Deque_base<Point, std::allocator<Point> >::_M_initialize_map(unsigned long) [86]
                0.00    0.00       4/896         std::__deque_buf_size(unsigned long) [10]
                0.00    0.00       4/4           std::_Deque_iterator<Point, Point&, Point*>::_M_set_node(Point**) [64]
                0.00    0.00       2/2           unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [98]
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_map(unsigned long) [80]
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_M_create_nodes(Point**, Point**) [81]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_M_destroy_nodes(Point**, Point**) [84]
[87]     0.0    0.00    0.00       2         std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_node(Point*) [87]
                0.00    0.00       2/896         std::__deque_buf_size(unsigned long) [10]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<Point> >::deallocate(std::allocator<Point>&, Point*, unsigned long) [90]
-----------------------------------------------
                0.00    0.00       2/2           std::deque<Point, std::allocator<Point> >::deque() [95]
[88]     0.0    0.00    0.00       2         std::_Deque_base<Point, std::allocator<Point> >::_Deque_base() [88]
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl::_Deque_impl() [78]
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_M_initialize_map(unsigned long) [86]
-----------------------------------------------
                0.00    0.00       2/2           std::deque<Point, std::allocator<Point> >::~deque() [96]
[89]     0.0    0.00    0.00       2         std::_Deque_base<Point, std::allocator<Point> >::~_Deque_base() [89]
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_M_destroy_nodes(Point**, Point**) [84]
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_map(Point**, unsigned long) [85]
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl::~_Deque_impl() [79]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_node(Point*) [87]
[90]     0.0    0.00    0.00       2         std::allocator_traits<std::allocator<Point> >::deallocate(std::allocator<Point>&, Point*, unsigned long) [90]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Point>::deallocate(Point*, unsigned long) [68]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_node() [83]
[91]     0.0    0.00    0.00       2         std::allocator_traits<std::allocator<Point> >::allocate(std::allocator<Point>&, unsigned long) [91]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Point>::allocate(unsigned long, void const*) [69]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_map(Point**, unsigned long) [85]
[92]     0.0    0.00    0.00       2         std::allocator_traits<std::allocator<Point*> >::deallocate(std::allocator<Point*>&, Point**, unsigned long) [92]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Point*>::deallocate(Point**, unsigned long) [72]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_map(unsigned long) [80]
[93]     0.0    0.00    0.00       2         std::allocator_traits<std::allocator<Point*> >::allocate(std::allocator<Point*>&, unsigned long) [93]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<Point*>::allocate(unsigned long, void const*) [73]
-----------------------------------------------
                0.00    0.00       2/2           std::deque<Point, std::allocator<Point> >::~deque() [96]
[94]     0.0    0.00    0.00       2         std::deque<Point, std::allocator<Point> >::_M_destroy_data(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::allocator<Point> const&) [94]
-----------------------------------------------
                0.00    0.00       1/2           ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&) [103]
                0.00    0.00       1/2           ConvexHallDeque::readPoints() [102]
[95]     0.0    0.00    0.00       2         std::deque<Point, std::allocator<Point> >::deque() [95]
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_Deque_base() [88]
-----------------------------------------------
                0.00    0.00       1/2           main [6]
                0.00    0.00       1/2           ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&) [103]
[96]     0.0    0.00    0.00       2         std::deque<Point, std::allocator<Point> >::~deque() [96]
                0.00    0.00       2/98          std::_Deque_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() [34]
                0.00    0.00       2/226         std::deque<Point, std::allocator<Point> >::end() [21]
                0.00    0.00       2/3           std::deque<Point, std::allocator<Point> >::begin() [66]
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::~_Deque_base() [89]
                0.00    0.00       2/2           std::deque<Point, std::allocator<Point> >::_M_destroy_data(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::allocator<Point> const&) [94]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_iterator<Point, Point&, Point*> std::move_backward<std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [108]
[97]     0.0    0.00    0.00       2         std::_Deque_iterator<Point, Point&, Point*> std::__miter_base<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>) [97]
                0.00    0.00       2/1481        std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [9]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<Point, std::allocator<Point> >::_M_initialize_map(unsigned long) [86]
[98]     0.0    0.00    0.00       2         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [98]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [125]
[99]     0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [99]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN15ConvexHallDeque11orientationE5PointS0_S0_ [124]
[100]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [100]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN14ConvexHallList11orientationE5PointS0_S0_ [123]
[101]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [101]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[102]    0.0    0.00    0.00       1         ConvexHallDeque::readPoints() [102]
                0.00    0.00      50/50          Point::Point(float, float) [40]
                0.00    0.00      50/50          std::deque<Point, std::allocator<Point> >::push_back(Point&&) [44]
                0.00    0.00       1/2           std::deque<Point, std::allocator<Point> >::deque() [95]
-----------------------------------------------
                0.00    0.00       1/1           main [6]
[103]    0.0    0.00    0.00       1         ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&) [103]
                0.00    0.00     462/462         std::deque<Point, std::allocator<Point> >::operator[](unsigned long) [16]
                0.00    0.00     379/379         std::deque<Point, std::allocator<Point> >::size() const [18]
                0.00    0.00     173/223         std::deque<Point, std::allocator<Point> >::back() [22]
                0.00    0.00     173/173         ConvexHallDeque::orientation(Point, Point, Point) [27]
                0.00    0.00     100/100         std::deque<Point, std::allocator<Point> >::push_back(Point const&) [33]
                0.00    0.00      96/96          std::deque<Point, std::allocator<Point> >::pop_back() [37]
                0.00    0.00       1/226         std::deque<Point, std::allocator<Point> >::end() [21]
                0.00    0.00       1/3           std::deque<Point, std::allocator<Point> >::begin() [66]
                0.00    0.00       1/1           void std::sort<std::_Deque_iterator<Point, Point&, Point*>, ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}) [121]
                0.00    0.00       1/2           std::deque<Point, std::allocator<Point> >::deque() [95]
                0.00    0.00       1/174         std::abs(float) [26]
                0.00    0.00       1/2           std::deque<Point, std::allocator<Point> >::~deque() [96]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>(ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}) [105]
[104]    0.0    0.00    0.00       1         __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>::_Iter_comp_iter(ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}) [104]
                0.00    0.00       1/50          std::remove_reference<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}&>::type&& std::move<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}&>(ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}&) [45]
-----------------------------------------------
                0.00    0.00       1/1           void std::sort<std::_Deque_iterator<Point, Point&, Point*>, ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}) [121]
[105]    0.0    0.00    0.00       1         __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>(ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}) [105]
                0.00    0.00       1/50          std::remove_reference<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}&>::type&& std::move<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}&>(ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}&) [45]
                0.00    0.00       1/1           __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>::_Iter_comp_iter(ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}) [104]
-----------------------------------------------
                0.00    0.00       1/1           Point* std::__copy_move_backward_a2<true, Point*, Point*>(Point*, Point*, Point*) [116]
[106]    0.0    0.00    0.00       1         Point* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<Point>(Point const*, Point const*, Point*) [106]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_iterator<Point, Point&, Point*> std::__copy_move_backward_a<true, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [111]
[107]    0.0    0.00    0.00       1         std::_Deque_iterator<Point, Point&, Point*> std::__niter_wrap<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*>) [107]
                0.00    0.00       1/1481        std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [9]
-----------------------------------------------
                0.00    0.00       1/1           void std::__insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [109]
[108]    0.0    0.00    0.00       1         std::_Deque_iterator<Point, Point&, Point*> std::move_backward<std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [108]
                0.00    0.00       3/1481        std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [9]
                0.00    0.00       2/2           std::_Deque_iterator<Point, Point&, Point*> std::__miter_base<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>) [97]
                0.00    0.00       1/1           std::_Deque_iterator<Point, Point&, Point*> std::__copy_move_backward_a<true, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [111]
-----------------------------------------------
                0.00    0.00       1/1           void std::__final_insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [112]
[109]    0.0    0.00    0.00       1         void std::__insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [109]
                0.00    0.00      46/1481        std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [9]
                0.00    0.00      16/52          std::operator!=(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&) [39]
                0.00    0.00      15/179         bool __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>::operator()<std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [25]
                0.00    0.00      15/134         std::_Deque_iterator<Point, Point&, Point*>::operator++() [30]
                0.00    0.00      14/48          __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [47]
                0.00    0.00      14/48          void std::__unguarded_linear_insert<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [48]
                0.00    0.00       2/481         std::operator+(std::_Deque_iterator<Point, Point&, Point*> const&, long) [13]
                0.00    0.00       2/1650        std::_Deque_iterator<Point, Point&, Point*>::operator*() const [8]
                0.00    0.00       2/367         std::remove_reference<Point&>::type&& std::move<Point&>(Point&) [19]
                0.00    0.00       1/53          std::operator==(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&) [38]
                0.00    0.00       1/1           std::_Deque_iterator<Point, Point&, Point*> std::move_backward<std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [108]
-----------------------------------------------
                                   5             void std::__introsort_loop<std::_Deque_iterator<Point, Point&, Point*>, long, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, long, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [110]
                0.00    0.00       1/1           void std::__sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [122]
[110]    0.0    0.00    0.00       1+5       void std::__introsort_loop<std::_Deque_iterator<Point, Point&, Point*>, long, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, long, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [110]
                0.00    0.00      20/1481        std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [9]
                0.00    0.00      11/397         std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&) [17]
                0.00    0.00       5/5           std::_Deque_iterator<Point, Point&, Point*> std::__unguarded_partition_pivot<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [56]
                                   5             void std::__introsort_loop<std::_Deque_iterator<Point, Point&, Point*>, long, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, long, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [110]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_iterator<Point, Point&, Point*> std::move_backward<std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [108]
[111]    0.0    0.00    0.00       1         std::_Deque_iterator<Point, Point&, Point*> std::__copy_move_backward_a<true, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [111]
                0.00    0.00       3/1481        std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [9]
                0.00    0.00       3/3           std::_Deque_iterator<Point, Point&, Point*> std::__niter_base<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>) [67]
                0.00    0.00       1/1           std::_Deque_iterator<Point, Point&, Point*> std::__copy_move_backward_a1<true, Point, Point&, Point*, Point>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [113]
                0.00    0.00       1/1           std::_Deque_iterator<Point, Point&, Point*> std::__niter_wrap<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*>) [107]
-----------------------------------------------
                0.00    0.00       1/1           void std::__sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [122]
[112]    0.0    0.00    0.00       1         void std::__final_insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [112]
                0.00    0.00       2/481         std::operator+(std::_Deque_iterator<Point, Point&, Point*> const&, long) [13]
                0.00    0.00       2/1481        std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [9]
                0.00    0.00       1/397         std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&) [17]
                0.00    0.00       1/1           void std::__insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [109]
                0.00    0.00       1/1           void std::__unguarded_insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [118]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_iterator<Point, Point&, Point*> std::__copy_move_backward_a<true, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [111]
[113]    0.0    0.00    0.00       1         std::_Deque_iterator<Point, Point&, Point*> std::__copy_move_backward_a1<true, Point, Point&, Point*, Point>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [113]
                0.00    0.00       3/1481        std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [9]
                0.00    0.00       1/1           std::_Deque_iterator<Point, Point&, Point*> std::__copy_move_backward_dit<true, Point, Point&, Point*, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [117]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_iterator<Point, Point&, Point*> std::__copy_move_backward_dit<true, Point, Point&, Point*, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [117]
[114]    0.0    0.00    0.00       1         __gnu_cxx::__enable_if<std::__is_random_access_iter<Point*, std::iterator_traits<Point*>::iterator_category>::__value, std::_Deque_iterator<Point, Point&, Point*> >::__type std::__copy_move_backward_a1<true, Point*, Point>(Point*, Point*, std::_Deque_iterator<Point, Point&, Point*>) [114]
                0.00    0.00       1/1           long const& std::min<long>(long const&, long const&) [119]
                0.00    0.00       1/1           Point* std::__copy_move_backward_a1<true, Point*, Point*>(Point*, Point*, Point*) [115]
                0.00    0.00       1/6           std::_Deque_iterator<Point, Point&, Point*>::operator-=(long) [53]
                0.00    0.00       1/1481        std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [9]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::__enable_if<std::__is_random_access_iter<Point*, std::iterator_traits<Point*>::iterator_category>::__value, std::_Deque_iterator<Point, Point&, Point*> >::__type std::__copy_move_backward_a1<true, Point*, Point>(Point*, Point*, std::_Deque_iterator<Point, Point&, Point*>) [114]
[115]    0.0    0.00    0.00       1         Point* std::__copy_move_backward_a1<true, Point*, Point*>(Point*, Point*, Point*) [115]
                0.00    0.00       1/1           Point* std::__copy_move_backward_a2<true, Point*, Point*>(Point*, Point*, Point*) [116]
-----------------------------------------------
                0.00    0.00       1/1           Point* std::__copy_move_backward_a1<true, Point*, Point*>(Point*, Point*, Point*) [115]
[116]    0.0    0.00    0.00       1         Point* std::__copy_move_backward_a2<true, Point*, Point*>(Point*, Point*, Point*) [116]
                0.00    0.00       1/1           Point* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<Point>(Point const*, Point const*, Point*) [106]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_iterator<Point, Point&, Point*> std::__copy_move_backward_a1<true, Point, Point&, Point*, Point>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [113]
[117]    0.0    0.00    0.00       1         std::_Deque_iterator<Point, Point&, Point*> std::__copy_move_backward_dit<true, Point, Point&, Point*, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [117]
                0.00    0.00       1/1481        std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [9]
                0.00    0.00       1/1           __gnu_cxx::__enable_if<std::__is_random_access_iter<Point*, std::iterator_traits<Point*>::iterator_category>::__value, std::_Deque_iterator<Point, Point&, Point*> >::__type std::__copy_move_backward_a1<true, Point*, Point>(Point*, Point*, std::_Deque_iterator<Point, Point&, Point*>) [114]
-----------------------------------------------
                0.00    0.00       1/1           void std::__final_insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [112]
[118]    0.0    0.00    0.00       1         void std::__unguarded_insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [118]
                0.00    0.00      35/1481        std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [9]
                0.00    0.00      35/52          std::operator!=(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&) [39]
                0.00    0.00      34/48          __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [47]
                0.00    0.00      34/48          void std::__unguarded_linear_insert<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [48]
                0.00    0.00      34/134         std::_Deque_iterator<Point, Point&, Point*>::operator++() [30]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::__enable_if<std::__is_random_access_iter<Point*, std::iterator_traits<Point*>::iterator_category>::__value, std::_Deque_iterator<Point, Point&, Point*> >::__type std::__copy_move_backward_a1<true, Point*, Point>(Point*, Point*, std::_Deque_iterator<Point, Point&, Point*>) [114]
[119]    0.0    0.00    0.00       1         long const& std::min<long>(long const&, long const&) [119]
-----------------------------------------------
                0.00    0.00       1/1           void std::__sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [122]
[120]    0.0    0.00    0.00       1         std::__lg(long) [120]
-----------------------------------------------
                0.00    0.00       1/1           ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&) [103]
[121]    0.0    0.00    0.00       1         void std::sort<std::_Deque_iterator<Point, Point&, Point*>, ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}) [121]
                0.00    0.00       2/1481        std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [9]
                0.00    0.00       1/1           __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>(ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}) [105]
                0.00    0.00       1/1           void std::__sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [122]
-----------------------------------------------
                0.00    0.00       1/1           void std::sort<std::_Deque_iterator<Point, Point&, Point*>, ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}) [121]
[122]    0.0    0.00    0.00       1         void std::__sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [122]
                0.00    0.00       4/1481        std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [9]
                0.00    0.00       1/52          std::operator!=(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&) [39]
                0.00    0.00       1/397         std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&) [17]
                0.00    0.00       1/1           std::__lg(long) [120]
                0.00    0.00       1/1           void std::__introsort_loop<std::_Deque_iterator<Point, Point&, Point*>, long, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, long, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [110]
                0.00    0.00       1/1           void std::__final_insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [112]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [99] __static_initialization_and_destruction_0(int, int) [82] std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl_data::_Deque_impl_data() [108] std::_Deque_iterator<Point, Point&, Point*> std::move_backward<std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>)
 [100] __static_initialization_and_destruction_0(int, int) [83] std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_node() [10] std::__deque_buf_size(unsigned long)
 [101] __static_initialization_and_destruction_0(int, int) [84] std::_Deque_base<Point, std::allocator<Point> >::_M_destroy_nodes(Point**, Point**) [109] void std::__insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>)
 [102] ConvexHallDeque::readPoints() [85] std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_map(Point**, unsigned long) [110] void std::__introsort_loop<std::_Deque_iterator<Point, Point&, Point*>, long, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, long, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>)
  [27] ConvexHallDeque::orientation(Point, Point, Point) [86] std::_Deque_base<Point, std::allocator<Point> >::_M_initialize_map(unsigned long) [54] std::_Deque_iterator<Point, Point&, Point*> std::__unguarded_partition<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>)
 [103] ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&) [87] std::_Deque_base<Point, std::allocator<Point> >::_M_deallocate_node(Point*) [111] std::_Deque_iterator<Point, Point&, Point*> std::__copy_move_backward_a<true, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>)
  [40] Point::Point(float, float) [34] std::_Deque_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() [112] void std::__final_insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>)
  [68] __gnu_cxx::new_allocator<Point>::deallocate(Point*, unsigned long) [88] std::_Deque_base<Point, std::allocator<Point> >::_Deque_base() [55] void std::__move_median_to_first<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>)
  [35] void __gnu_cxx::new_allocator<Point>::destroy<Point>(Point*) [89] std::_Deque_base<Point, std::allocator<Point> >::~_Deque_base() [113] std::_Deque_iterator<Point, Point&, Point*> std::__copy_move_backward_a1<true, Point, Point&, Point*, Point>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>)
  [69] __gnu_cxx::new_allocator<Point>::allocate(unsigned long, void const*) [64] std::_Deque_iterator<Point, Point&, Point*>::_M_set_node(Point**) [114] __gnu_cxx::__enable_if<std::__is_random_access_iter<Point*, std::iterator_traits<Point*>::iterator_category>::__value, std::_Deque_iterator<Point, Point&, Point*> >::__type std::__copy_move_backward_a1<true, Point*, Point>(Point*, Point*, std::_Deque_iterator<Point, Point&, Point*>)
  [31] void __gnu_cxx::new_allocator<Point>::construct<Point, Point const&>(Point*, Point const&) [11] std::_Deque_iterator<Point, Point&, Point*>::_S_buffer_size() [115] Point* std::__copy_move_backward_a1<true, Point*, Point*>(Point*, Point*, Point*)
  [41] void __gnu_cxx::new_allocator<Point>::construct<Point, Point>(Point*, Point&&) [9] std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator(std::_Deque_iterator<Point, Point&, Point*> const&) [116] Point* std::__copy_move_backward_a2<true, Point*, Point*>(Point*, Point*, Point*)
  [70] __gnu_cxx::new_allocator<Point>::new_allocator() [65] std::_Deque_iterator<Point, Point&, Point*>::_Deque_iterator() [117] std::_Deque_iterator<Point, Point&, Point*> std::__copy_move_backward_dit<true, Point, Point&, Point*, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>)
  [71] __gnu_cxx::new_allocator<Point>::~new_allocator() [53] std::_Deque_iterator<Point, Point&, Point*>::operator-=(long) [48] void std::__unguarded_linear_insert<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>)
  [72] __gnu_cxx::new_allocator<Point*>::deallocate(Point**, unsigned long) [14] std::_Deque_iterator<Point, Point&, Point*>::operator--() [118] void std::__unguarded_insertion_sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>)
  [73] __gnu_cxx::new_allocator<Point*>::allocate(unsigned long, void const*) [12] std::_Deque_iterator<Point, Point&, Point*>::operator+=(long) [56] std::_Deque_iterator<Point, Point&, Point*> std::__unguarded_partition_pivot<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>)
  [58] __gnu_cxx::new_allocator<Point*>::new_allocator() [30] std::_Deque_iterator<Point, Point&, Point*>::operator++() [26] std::abs(float)
  [59] __gnu_cxx::new_allocator<Point*>::~new_allocator() [90] std::allocator_traits<std::allocator<Point> >::deallocate(std::allocator<Point>&, Point*, unsigned long) [98] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  [46] __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>::_Val_comp_iter(__gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>&&) [36] void std::allocator_traits<std::allocator<Point> >::destroy<Point>(std::allocator<Point>&, Point*) [119] long const& std::min<long>(long const&, long const&)
  [24] bool __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>::operator()<Point, std::_Deque_iterator<Point, Point&, Point*> >(Point&, std::_Deque_iterator<Point, Point&, Point*>) [91] std::allocator_traits<std::allocator<Point> >::allocate(std::allocator<Point>&, unsigned long) [120] std::__lg(long)
 [104] __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>::_Iter_comp_iter(ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}) [32] void std::allocator_traits<std::allocator<Point> >::construct<Point, Point const&>(std::allocator<Point>&, Point*, Point const&) [19] std::remove_reference<Point&>::type&& std::move<Point&>(Point&)
  [25] bool __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>::operator()<std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>) [42] void std::allocator_traits<std::allocator<Point> >::construct<Point, Point>(std::allocator<Point>&, Point*, Point&&) [49] std::remove_reference<__gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>&>::type&& std::move<__gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>&>(__gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>&)
  [47] __gnu_cxx::__ops::_Val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__val_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>(__gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>) [92] std::allocator_traits<std::allocator<Point*> >::deallocate(std::allocator<Point*>&, Point**, unsigned long) [45] std::remove_reference<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}&>::type&& std::move<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}&>(ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}&)
 [105] __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> __gnu_cxx::__ops::__iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>(ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}) [93] std::allocator_traits<std::allocator<Point*> >::allocate(std::allocator<Point*>&, unsigned long) [121] void std::sort<std::_Deque_iterator<Point, Point&, Point*>, ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1})
  [74] __gnu_cxx::new_allocator<Point>::_M_max_size() const [106] Point* std::__copy_move_backward<true, true, std::random_access_iterator_tag>::__copy_move_b<Point>(Point const*, Point const*, Point*) [50] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<Point> >, std::is_move_constructible<Point>, std::is_move_assignable<Point> >::value, void>::type std::swap<Point>(Point&, Point&)
  [75] __gnu_cxx::new_allocator<Point*>::_M_max_size() const [43] Point& std::deque<Point, std::allocator<Point> >::emplace_back<Point>(Point&&) [122] void std::__sort<std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, __gnu_cxx::__ops::_Iter_comp_iter<ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}>)
  [60] std::_Deque_base<Point, std::allocator<Point> >::_M_get_Tp_allocator() const [94] std::deque<Point, std::allocator<Point> >::_M_destroy_data(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>, std::allocator<Point> const&) [28] Point&& std::forward<Point>(std::remove_reference<Point>::type&)
  [61] std::_Deque_base<Point, std::allocator<Point> >::_M_get_map_allocator() const [21] std::deque<Point, std::allocator<Point> >::end() [23] Point const& std::forward<Point const&>(std::remove_reference<Point const&>::type&)
   [8] std::_Deque_iterator<Point, Point&, Point*>::operator*() const [22] std::deque<Point, std::allocator<Point> >::back() [51] void std::iter_swap<std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>, std::_Deque_iterator<Point, Point&, Point*>)
  [15] std::_Deque_iterator<Point, Point&, Point*>::operator[](long) const [66] std::deque<Point, std::allocator<Point> >::begin() [38] std::operator==(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&)
  [18] std::deque<Point, std::allocator<Point> >::size() const [37] std::deque<Point, std::allocator<Point> >::pop_back() [52] std::operator<(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&)
  [76] std::allocator<Point>::allocator() [44] std::deque<Point, std::allocator<Point> >::push_back(Point&&) [17] std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&)
  [77] std::allocator<Point>::~allocator() [33] std::deque<Point, std::allocator<Point> >::push_back(Point const&) [57] std::operator-(std::_Deque_iterator<Point, Point&, Point*> const&, long)
  [62] std::allocator<Point*>::allocator<Point>(std::allocator<Point> const&) [95] std::deque<Point, std::allocator<Point> >::deque() [39] std::operator!=(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*> const&)
  [63] std::allocator<Point*>::~allocator() [96] std::deque<Point, std::allocator<Point> >::~deque() [13] std::operator+(std::_Deque_iterator<Point, Point&, Point*> const&, long)
  [78] std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl::_Deque_impl() [16] std::deque<Point, std::allocator<Point> >::operator[](unsigned long) [20] ConvexHallDeque::convexHallArea(std::deque<Point, std::allocator<Point> >&)::{lambda(Point, Point)#1}::operator()(Point, Point) const
  [79] std::_Deque_base<Point, std::allocator<Point> >::_Deque_impl::~_Deque_impl() [97] std::_Deque_iterator<Point, Point&, Point*> std::__miter_base<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>) [29] operator new(unsigned long, void*)
  [80] std::_Deque_base<Point, std::allocator<Point> >::_M_allocate_map(unsigned long) [67] std::_Deque_iterator<Point, Point&, Point*> std::__niter_base<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*>)
  [81] std::_Deque_base<Point, std::allocator<Point> >::_M_create_nodes(Point**, Point**) [107] std::_Deque_iterator<Point, Point&, Point*> std::__niter_wrap<std::_Deque_iterator<Point, Point&, Point*> >(std::_Deque_iterator<Point, Point&, Point*> const&, std::_Deque_iterator<Point, Point&, Point*>)
